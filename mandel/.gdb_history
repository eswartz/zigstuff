n
p data.iters
n
p iterIndex
b 113 if iters>1
c
dis 1
c
p iters
c
c
dis 3
c
dis 2
c
r
up
p stop
p *stop
p oy
p data
p *data
b mandel.zig:174
r
info locals
f
p fxs
p fxs[0]
p fxs.items.ptr[0]
p fxs.items.ptr[1]
p fxs.items.ptr[2]
p fxs.items.ptr[127]
f
n
p px0
p py0
n
p blockData
n
p blockData
p *blockData
n
p *blockData
n
p blocks
p blocks.items.ptr[0]
p blocks.items.ptr[1]
p blocks.items.ptr[2]
f
n
b 208
d 1
c
n
n
p slice
p nt
p PERTHREAD 
p slice
p workLoad.blocks
p nt
n
up
down
info locals
p blocks.ptr[0]
p blocks.ptr[1]
p blocks.ptr[0].data
p *blocks.ptr[0].data
p *blocks.ptr[1].data
r
r
disas
up
p data
p *data
b viewer.zig:172
r
n
p PER
p PERTHREAD 
n
p slice
p slice.ptr[0]
p slice.ptr[0].data
p *slice.ptr[0].data
b mandel.zig:330
r
p block
p res
p *block
n
p *block
p block
c
p block
b 321
c
c
dis 3
dis 4
c
c
up
p data
b mandel.zig:292
r
b mandel.zig:292
b mandel.zig:292
r
b 292
d 2 3
b mandel.zig:442
r
p c
printf "%x\n", c.x
printf "%x\n", (int)c.x
x/8m c.x
x/8m &c.x
x/8bx &c.x
x/8bx &c.y
f
s
s
s
n
p words
p words[0]
s
n
p words
info locals
p words
f
n
p words
r
p cur_node
up
info locals
up
p self.ptr
x/10x self.ptr
p len
p ptr_align
p len_align
p ret_addr
up
p self
up
p self
p self.arena
b files.zig:36
r
b files.zig:26
r
n
p arena
r
s
s
s
s
p alloc
p resize
p free
info locals
p *self
b files.zig:198
r
p p
p istr.len
n
r
n
r
p p
p istr.len
disas
si
info reg rcx
info reg rdx
info reg rax
p p
p istr
p str
b files.zig:81
r
p buf
p iters
p iters.ptr[0]
p iters.ptr[1]
x/16x iters.ptr
b mandel.zig:49
r
n
p ps
n
p SEGS
n
p i
n
p i
n
p i
x/16x &i
r
n
x/16x &i
p self.words
r
up
b files.zig:93
r
p blockSize
p ix
c
p ix
p px
r
up
p y
p x
up
p px
p py
p self.params.sx
p self.params.sy
info locals
p ix
p iy
p px
p py
b 99
r
p px
p self.params
p *self.params
p blockSize
p -blockSiz
p -blockSize
printf "%x\n", -blockSize
printf "%x\n", ~blockSize
printf "%x\n", (blockSize-1)
printf "%x\n", ~(blockSize-1)
r
up
p y
up
p px
p py
p self.params
p *self.params
p *block
p px
p px &(blockSize-1)
